{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\AppClima\\\\weatherApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css'; // import Card from './components/Card/Card.jsx';\n\nimport Cards from './components/Card/Cards.jsx'; // import SearchBar from './components/Nav/SearchBar/SearchBar.jsx';\n// import data, { Cairns } from './data.js';\n\nimport Nav from './components/Nav/Nav.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/AppClima/weatherApp/src/App.js"],"names":["React","useState","Cards","Nav","App","cities","setCities","onSearch","ciudad","fetch","process","env","REACT_APP_WEATHER_API_KEY","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","onClose","filter","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,6BAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASM,QAAT,CAAkBC,MAAlB,EAA0B;AACxBC,IAAAA,KAAK,CACF,qDAAoDD,MAAO,UAASE,OAAO,CAACC,GAAR,CAAYC,yBAA0B,iBADxG,CAAL,CAGGC,IAHH,CAGQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAHb,EAIGF,IAJH,CAISG,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,IAAR,KAAiBC,SAArB,EAAgC;AAC9B,cAAMV,MAAM,GAAG;AACbW,UAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;AAEbC,UAAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;AAGbC,UAAAA,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbC,UAAAA,EAAE,EAAEZ,OAAO,CAACY,EAJC;AAKbC,UAAAA,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;AAMbC,UAAAA,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;AAObC,UAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAPD;AAQbN,UAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;AASbgB,UAAAA,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;AAUbC,UAAAA,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;AAWbC,UAAAA,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;AAXX,SAAf;AAaAjC,QAAAA,SAAS,CAACkC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAehC,MAAf,CAAd,CAAT;AACD,OAfD,MAeO;AACLiC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KAvBH;AAyBD;;AAED,WAASC,OAAT,CAAiBd,EAAjB,EAAqB;AACnBtB,IAAAA,SAAS,CAACkC,SAAS,IAAIA,SAAS,CAACG,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAAChB,EAAF,KAASA,EAA/B,CAAd,CAAT;AACD;;AAED,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAErB;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,MAAf;AAAuB,MAAA,OAAO,EAAEqC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD;;GA7CQtC,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n// import Card from './components/Card/Card.jsx';\r\nimport Cards from './components/Card/Cards.jsx';\r\n// import SearchBar from './components/Nav/SearchBar/SearchBar.jsx';\r\n// import data, { Cairns } from './data.js';\r\nimport Nav from './components/Nav/Nav.jsx'\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n\r\n  function onSearch(ciudad) {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial`\r\n    )\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if (recurso.main !== undefined) {\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  function onClose(id) {\r\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <div>\r\n        <Nav onSearch={onSearch} />\r\n      </div>\r\n      <Cards cities={cities} onClose={onClose} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}